[branch "master"]
	rebase = true
[merge "ours"]
	driver = true
[user]
	email = andrew.monks@samsara.com
	name = monks
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true


[core]
    editor = vim

[alias]
    r = "!f() { git fetch && target=$(git safe-rebase-target) && git rebase $target --exec \"git commit --amend \\\"--date=$(date)\\\" --no-edit\" ; }; f"
    ri= "!f() { git fetch && target=$(git safe-rebase-target) && git rebase -i $target && git rebase $target --exec \"git commit --amend \\\"--date=$(date)\\\" --no-edit\" ; }; f"
    p = "!f() { branch=$(git rev-parse --abbrev-ref HEAD) && git push --force-with-lease --set-upstream -- origin $branch ; }; f"
    rp = "!f() { git r && git p ; }; f"
    rip = "!f() { git ri && git p ; }; f"

    ri-test = "!f() { git fetch && target=$(git safe-rebase-target) && git rebase $target -i --exec \"regen && git add . && git commit --amend --no-edit\" && git r ; }; f"

    safe-rebase-target = "!f() { safe-rebase-target; }; f"
    master = "!f() { git status --porcelain && git fetch && git checkout master && git reset --hard $(git safe-rebase-target) ; }; f"

    # check out a new branch from safe master
    new-branch = "!f() { git fetch && git checkout -b $1 && git reset --hard $(git safe-rebase-target); }; f"

    #
    summon = "!f() { b=$1&& git fetch origin +refs/heads/$b:refs/remotes/origin/$b $b:$b ; }; f"
    branches = "branch --sort=-committerdate"
    touching = "rev-list --all --format=%B"
    switch = "!f() { b=`git branches | fzf` && git checkout $b ; }; f"

